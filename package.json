{
  "name": "@kennyldev/usetimeout-react-hook",
  "version": "1.0.0",
  "description": "React.js custom hook that sets a leak-safe timeout and returns a function to cancel it before the timeout expires.",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "type": "module",
  "scripts": {
    "build": "tsc -b && vite build",
    "test": "jest --coverage",
    "prepublishOnly": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kennyldev/usetimeout-react-hook.git"
  },
  "files": [
    "dist",
    "README.md"
  ],
  "keywords": [
    "react",
    "hooks",
    "timeout",
    "cancelable"
  ],
  "author": "Kenneth Lindelof <developer@kennyl.dev>",
  "contributors": [
    {
      "name": "Alberto Schiabel",
      "email": "alberto.schiabel@gmail.com",
      "url": "https://jkomyno.github.io/"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kennyldev/usetimeout-react-hook/issues"
  },
  "homepage": "https://github.com/kennyldev/usetimeout-react-hook#readme",
  "devDependencies": {
    "@testing-library/react-hooks": "^1.1.0",
    "@types/jest": "^24.0.15",
    "coveralls": "^3.0.5",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-test-renderer": "^18.3.1",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.2",
    "vite": "^6.0.6",
    "vite-plugin-dts": "^4.4.0"
  },
  "peerDependencies": {
    "react": "^18.3.1",
    "react-dom": "^18.3.1"
  },
  "publishConfig": {
    "access": "public"
  }
}